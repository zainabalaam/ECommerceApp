You said:
@model IPagedList<ECommerceApp.DTOs.ProductDto>

@{
    ViewData["Title"] = "Product Catalog";
}

<!-- Filters (Search and Category) -->
<div class="filter-controls">
    <h1>Products</h1>
    <form method="get" action="@Url.Action("Index")" class="d-flex mb-3">
        <input type="text" name="query" value="@ViewBag.Query" placeholder="Search products..." class="form-control me-2" style="width: 300px;" />
        @Html.DropDownList("categoryId", (SelectList)ViewBag.CategoryList, "All Categories", new { @class = "form-control me-2", style = "width: 200px;" })
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>
</div>

<!-- Sorting Links -->
<div class="sorting-controls mb-3">
    Sort by:
    <a href="?query=@ViewBag.Query&categoryId=@ViewBag.CategoryId&sortBy=name" @(ViewBag.SortBy == "name" ? "class=active" : "")>Name</a> |
    <a href="?query=@ViewBag.Query&categoryId=@ViewBag.CategoryId&sortBy=price" @(ViewBag.SortBy == "price" ? "class=active" : "")>Price (Low to High)</a> |
    <a href="?query=@ViewBag.Query&categoryId=@ViewBag.CategoryId&sortBy=price_desc" @(ViewBag.SortBy == "price_desc" ? "class=active" : "")>Price (High to Low)</a>
</div>

<!-- Product List -->
<div class="product-list">
    @if (Model.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100">
                        <img src="@product.ImageUrl" alt="@product.Name" class="card-img-top" onerror="this.src='/images/default-product.jpg'" style="object-fit: cover; height: 200px;" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text">Price: $@product.Price</p>
                            <p class="card-text">Stock: @product.Stock</p>
                            <p class="card-text">Category ID: @product.CategoryId</p>
                            <div class="d-flex gap-2">
                                <a href="@Url.Action("Details", "Product", new { id = product.ProductId })" class="btn btn-primary">View Details</a>
                                <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@product.ProductId" />
                                    <button type="submit" class="btn btn-secondary">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-center">@ViewBag.NoResults</p>
    }
</div>

<!-- Pagination Controls -->
<div class="pagination-wrapper">
    <span class="pagination-text">Page @Model.PageNumber of @Model.PageCount.</span>

    @Html.PagedListPager(Model, page => Url.Action("Index", new { query = ViewBag.Query, categoryId = ViewBag.CategoryId, page, sortBy = ViewBag.SortBy }),
            new PagedListRenderOptions
    {
        Display = PagedListDisplayMode.IfNeeded,
        DisplayPageCountAndCurrentLocation = false, // Hide built-in text
        MaximumPageNumbersToDisplay = 5,
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>



<!-- Bootstrap CSS/JS (if not already in _Layout.cshtml) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Optional CSS for Custom Styling -->
<style>
    .filter-controls, .sorting-controls {
        margin-top: 20px;
    }

    .product-list .card {
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .sorting-controls a.active {
        font-weight: bold;
        color: #007bff;
    }

 
    .pagination-wrapper {
        display: flex;
        align-items: center;
        gap: 15px; /* Space between text and pagination */
        margin-top: 20px;
    }

    .pagination-text {
        font-weight: bold;
        font-size: 16px;
        color: #555;
        white-space: nowrap; /* Prevents text from wrapping */
    }

    .pagination-controls .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        background: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

     .pagination-controls .pagination li {
         margin: 0 2px;
     }

    .pagination-controls .pagination li a {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        text-decoration: none;
        color: #007bff;
        font-weight: bold;
        border-radius: 5px;
        transition: all 0.3s ease;
        border: 1px solid #ddd;
        background: #f8f9fa;
    }

    .pagination-controls .pagination li a:hover {
        background: #007bff;
        color: white;
        border-color: #007bff;
    }

    .pagination-controls .pagination li.active a {
        background: #007bff;
        color: white;
        border-color: #007bff;
    }

    .pagination-controls .pagination li.disabled a {
        opacity: 0.5;
        cursor: not-allowed;
    }



</style>    
